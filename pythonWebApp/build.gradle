buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies{
      classpath 'com.linkedin.pygradle:pygradle-plugin:0.+'
}
}

apply plugin: 'idea'
apply plugin: 'com.linkedin.python-web-app'

version = "0.1"

python {
   docsDir = project.file('docs').path
   srcDir = project.file('src/server').path
   testDir = project.file('src/server/tests').path
   details {
     pythonVersion = '3.6'
     systemPythonInterpreter = file("/usr/bin/python3")
   }
}

dependencies {
    python 'pypi:requests:2.18.4'
}

repositories { pyGradlePyPi() }

task webpackInstall(type: Exec) {
    workingDir "$projectDir/src/static"
    inputs.file("$workingDir/package-lock.json")
    inputs.file("$workingDir/webpack.config.json")
    outputs.dir("$workingDir/node_modules")
    commandLine "npm", "install"
}

task webpackAssemble(type: Exec) {
    dependsOn webpackInstall
    workingDir "$projectDir/src/static"
    inputs.file("$workingDir/package-lock.json")
    inputs.file("$workingDir/webpack.config.json")
    inputs.dir("$workingDir/js")
    outputs.dir("$workingDir/dist")
    commandLine "npm", "run", "build"
}
tasks.assemble.dependsOn webpackAssemble

task webpackTest(type: Exec) {
    dependsOn webpackAssemble
    workingDir "$projectDir/src/static"
    inputs.file("$workingDir/package-lock.json")
    inputs.file("$workingDir/webpack.config.json")
    inputs.dir("$workingDir/js")
    inputs.dir("$workingDir/__tests__")
    outputs.upToDateWhen { true }
    commandLine "npm", "run", "test"
}
tasks.check.dependsOn webpackTest